!function(){"use strict";function stateConfig($stateProvider,$httpProvider){$stateProvider.state("app",{url:"","abstract":!0,resolve:{appEvent:function(){return{spinnerVisible:!1,spinnerShow:function(){this.spinnerVisible=!0},spinnerHide:function(){this.spinnerVisible=!1}}}},views:{"header@":{templateUrl:"components/HeaderWidget/HeaderWidget.html",controller:"headerCtrl",controllerAs:"headerVm"},"footer@":{templateUrl:"components/FooterWidget/FooterWidget.html",controller:"footerCtrl",controllerAs:"footerVm"}}}).state("app.getData",{url:"/getData",views:{"@":{template:"<div>{{getDataVm.qalist}}</div>",controller:["questionAnswerService",function(questionAnswerService){var getDataVm=this;getDataVm.qalist="loading...",questionAnswerService.getAllQAList().success(function(data){var hitList=data.hits.hits,response={};angular.forEach(hitList,function(hit){response[hit._type]||(response[hit._type]=[]),response[hit._type].push(hit._source)}),getDataVm.qalist=response}).error(function(data){getDataVm.qalist=data})}],controllerAs:"getDataVm"}}})}var app=angular.module("myProject",["ui.router","ui.bootstrap","header","footer","home","questionAnswer","updateQusAns","searchResult","textAngular"]);app.constant("BASE_CONFIG",{API_HOST:"https://qxLl5Rl0U6Z0Iw0UFYqxgPhVVFuynSkS:@jamesmj.east-us.azr.facetflow.io/qus_ans/",APP_MENU:["HTML","CSS","JS","JQuery","AngularJS","BackboneJS","Java","GWT","Others"]}),app.run(["$state","$http",function($state,$http){$http.defaults.headers.common.Authorization="Basic cXhMbDVSbDBVNlowSXcwVUZZcXhnUGhWVkZ1eW5Ta1M6",$state.go("app.home")}]),app.config(["$stateProvider","$httpProvider",stateConfig])}(),function(){function enterKeyDirective(){return{restrict:"A",link:function($scope,$element,$attrs){$element.bind("keypress",function(event){var keyCode=event.which||event.keyCode;13==keyCode&&$scope.$apply(function(){$scope.$eval($attrs.enterKeyDirective,{$event:event})})})}}}angular.module("myProject").directive("enterKeyDirective",enterKeyDirective)}(),function(){"use strict";var footer=angular.module("footer",[]);footer.controller("footerCtrl",function(){})}(),function(){"use strict";var header=angular.module("header",[]);header.controller("headerCtrl",["$scope","$state","BASE_CONFIG",function($scope,$state,BASE_CONFIG){var headerVm=this;headerVm.menu=BASE_CONFIG.APP_MENU,$scope.$on("changeQType",function(event,data){headerVm.activeType=data.type}),headerVm.doSearch=function(){headerVm.searchTerm&&""!=headerVm.searchTerm&&($("button.navbar-toggle:visible").click(),$state.go("app.searchResult",{q:headerVm.searchTerm}))}}])}(),function(){"use strict";function qusAnsListWidgetCtrl($scope,$rootScope,$stateParams,$uibModal,updateQusAnsSevice,BASE_CONFIG,questionList,$timeout){function refreshList(){$timeout(function(){questionList.init()},1e3)}var qusAnsListWidgetVM=this;$stateParams.qtype;$scope.$on("qusAnsUpdated",function(event,data){qusAnsListWidgetVM.qlist=updateQusAnsSevice.getFetchedQus()}),qusAnsListWidgetVM.qlist=updateQusAnsSevice.getFetchedQus(),qusAnsListWidgetVM.tlist=BASE_CONFIG.APP_MENU,qusAnsListWidgetVM.doEdit=function(question){$rootScope.$broadcast("editQuestionInfo",question)},qusAnsListWidgetVM.doDelete=function(item){var modalInstance=$uibModal.open({templateUrl:"components/QusAnsListWidget/DeleteQusAnsConfirm.html",controller:"deleteQusAnsConfirmCtrl",controllerAs:"deleteQusAnsConfirmVM",backdrop:"static",resolve:{question:function(){return item}}});modalInstance.result.then(function(){refreshList()},function(){})}}function deleteQusAnsCtrl($modalInstance,question,updateQusAnsSevice){var deleteQusAnsConfirmVM=this;deleteQusAnsConfirmVM.doDelete=function(){updateQusAnsSevice.deleteQuestion(question).success(function(succssRes){deleteQusAnsConfirmVM.errorRes=null,$modalInstance.close()}).error(function(errorRes){deleteQusAnsConfirmVM.errorRes=errorRes,console.log("errorRes",errorRes)})},deleteQusAnsConfirmVM.doCancel=function(){deleteQusAnsConfirmVM.errorRes=null,$modalInstance.dismiss("cancel")}}var qusAnsWidget=angular.module("updateQusAnsList",[]);qusAnsWidget.controller("qusAnsListWidgetCtrl",["$scope","$rootScope","$stateParams","$uibModal","updateQusAnsSevice","BASE_CONFIG","questionList","$timeout",qusAnsListWidgetCtrl]),qusAnsWidget.controller("deleteQusAnsConfirmCtrl",["$modalInstance","question","updateQusAnsSevice",deleteQusAnsCtrl])}(),function(){"use strict";var qusAnsWidget=angular.module("qusAnsWidget",[]);qusAnsWidget.controller("qusAnsWidgetCtrl",["$scope","$rootScope","$stateParams","questionAnswerService",function($scope,$rootScope,$stateParams,questionAnswerService){var qusAnsWidgetVM=this,qno=$stateParams.qno;$scope.$on("qusAnsUpdated",function(event,data){qusAnsWidgetVM.content=questionAnswerService.getContent(qno)}),qusAnsWidgetVM.content=questionAnswerService.getContent(qno),$rootScope.$broadcast("changeQno",{qno:qno})}])}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("app.home",{url:"/",views:{"@":{templateUrl:"pages/HomePage/HomePage.html",controller:"homeCtrl",controllerAs:"homeVm"}}})}function controller($rootScope){$rootScope.$broadcast("changeQType",{type:""})}var home=angular.module("home",["ui.router"]);home.config(["$stateProvider",stateConfig]),home.controller("homeCtrl",["$rootScope",controller])}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("app.qusAns",{url:"/qustion?qtype",resolve:["$rootScope","$stateParams","questionAnswerService",qusAnsResolve],views:{"@":{templateUrl:"pages/QusAnsPage/QusAnsPage.html",controller:"questionAnserCtrl",controllerAs:"questionAnserVM"}}}).state("app.qusAns.qno",{url:"/qno?qno",templateUrl:"components/QusAnsViewWidget/QusAnsViewWidget.html",controller:"qusAnsWidgetCtrl",controllerAs:"qusAnsWidgetVM"})}function qusAnsResolve($rootScope,$stateParams,questionAnswerService){return questionAnswerService.getListOfQuestions($stateParams.qtype).success(function(successRes){questionAnswerService.setContentList(successRes.hits.hits),$rootScope.$broadcast("qusAnsUpdated",{})}).error(function(errorRes){console.log("Error...",errorRes)}),{}}function controller($scope,$rootScope,$state,$stateParams,questionAnswerService){var questionAnserVM=this;questionAnserVM.qtype=$stateParams.qtype,$rootScope.$broadcast("changeQType",{type:questionAnserVM.qtype}),$scope.$on("changeQno",function(event,data){questionAnserVM.qno=data.qno}),questionAnserVM.goToQuestion=function(){""!=questionAnserVM.qno&&$state.go("app.qusAns.qno",{qtype:questionAnserVM.qtype,qno:questionAnserVM.qno})},questionAnserVM.goToNext=function(flag){var maxQno=questionAnswerService.getContentCount();flag?questionAnserVM.qno++:questionAnserVM.qno--,questionAnserVM.qno>maxQno&&(questionAnserVM.qno=maxQno),questionAnserVM.qno<1&&(questionAnserVM.qno=1),questionAnserVM.goToQuestion()}}var questionAnswer=angular.module("questionAnswer",["ui.router","qusAnsWidget"]);questionAnswer.config(["$stateProvider",stateConfig]),questionAnswer.controller("questionAnserCtrl",["$scope","$rootScope","$state","$stateParams","questionAnswerService",controller])}(),function(){"use strict";function questionAnswerService($http,BASE_CONFIG){function getListOfQuestions(qtype){var query={sort:[{_id:{order:"asc"}}]};return $http.post(BASE_CONFIG.API_HOST+qtype.toLowerCase()+"/_search?size=1000",query)}function setContentList(contents){contentList=[],angular.forEach(contents,function(item,index){var qusInfo=item._source;qusInfo.qno=index+1,contentList.push(qusInfo)})}function getContent(index){var content=contentList[index-1];return content?contentList[index-1]:{}}function getContentCount(){return contentList.length}function getAllQAList(){return $http.post(BASE_CONFIG.API_HOST+"/_search?1000")}var contentList=[];return{getListOfQuestions:getListOfQuestions,setContentList:setContentList,getContent:getContent,getContentCount:getContentCount,getAllQAList:getAllQAList}}angular.module("questionAnswer").service("questionAnswerService",["$http","BASE_CONFIG",questionAnswerService])}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("app.searchResult",{url:"/searchResult?q",resolve:{questionList:["$stateParams","$rootScope","searchResultSevice",searchResultResolve]},views:{"@":{templateUrl:"pages/SearchResultPage/SearchResultPage.html",controller:"searchResultCtrl",controllerAs:"searchResultVM"}}})}function searchResultResolve($stateParams,$rootScope,updateQusAnsSevice){var query=$stateParams.q?$stateParams.q:"";return updateQusAnsSevice.getResult(query).success(function(successRes){updateQusAnsSevice.setResult(successRes.hits.hits),$rootScope.$broadcast("searchResultUpdated",{})}).error(function(errorRes){console.log("Error...",errorRes)}),{}}function controller($stateParams,$scope,searchResultSevice){var searchResultVM=this;$scope.$on("searchResultUpdated",function(event,data){searchResultVM.searchResults=searchResultSevice.fetchResult()}),searchResultVM.query=$stateParams.q?$stateParams.q:"",searchResultVM.searchResults=searchResultSevice.fetchResult()}var questionAnswer=angular.module("searchResult",["ui.router"]);questionAnswer.config(["$stateProvider",stateConfig]),questionAnswer.controller("searchResultCtrl",["$stateParams","$scope","searchResultSevice",controller])}(),function(){"use strict";function searchResultSevice($http,BASE_CONFIG){function getResult(searchTerm){var query={query:{match:{question:{query:searchTerm,operator:"and"}}}};return $http.post(BASE_CONFIG.API_HOST+"_search?size=1000",query)}function fetchResult(){return results}function setResult(list){results=[],angular.forEach(list,function(item,index){var qusInfo=item._source;qusInfo.qno=index+1,qusInfo.id=item._id,results.push(item._source)})}var results=[];return{getResult:getResult,setResult:setResult,fetchResult:fetchResult}}angular.module("searchResult").service("searchResultSevice",["$http","BASE_CONFIG",searchResultSevice])}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("app.updateQusAns",{url:"/updateQusAns?qtype",resolve:{questionList:["$stateParams","$rootScope","BASE_CONFIG","updateQusAnsSevice",qusAnsResolve]},views:{"@":{templateUrl:"pages/UpdateQusAnsPage/UpdateQusAnsPage.html",controller:"updateQusAnsCtrl",controllerAs:"updateQusAnsVM"}}}).state("app.updateQusAns.list",{url:"/list",templateUrl:"components/QusAnsListWidget/QusAnsListWidget.html",controller:"qusAnsListWidgetCtrl",controllerAs:"qusAnsListWidgetVM"})}function qusAnsResolve($stateParams,$rootScope,BASE_CONFIG,updateQusAnsSevice){var qusAnsResolve=($stateParams.qtype?$stateParams.qtype:BASE_CONFIG.APP_MENU[0],this),init=function(){updateQusAnsSevice.getListOfQus($stateParams.qtype).success(function(successRes){updateQusAnsSevice.setQusList(successRes.hits.hits),$rootScope.$broadcast("qusAnsUpdated",{})}).error(function(errorRes){console.log("Error...",errorRes)})};return qusAnsResolve.init=init,init(),qusAnsResolve}function controller($scope,$rootScope,$state,$stateParams,$timeout,$uibModal,BASE_CONFIG,updateQusAnsSevice,questionList){function refreshList(){$timeout(function(){questionList.init()},1e3)}var updateQusAnsVM=this;updateQusAnsVM.qtype=$stateParams.qtype?$stateParams.qtype:BASE_CONFIG.APP_MENU[0],$rootScope.$broadcast("changeQType",{type:"List All"}),updateQusAnsVM.tlist=BASE_CONFIG.APP_MENU,$scope.$on("editQuestionInfo",function(event,data){updateQusAnsVM.doEdit(data)}),updateQusAnsVM.doAdd=function(){updateQusAnsVM.doEdit({qtype:updateQusAnsVM.qtype})},updateQusAnsVM.doEdit=function(question){updateQusAnsVM.errorRes=null,updateQusAnsVM.question=question;var modalInstance=$uibModal.open({templateUrl:"pages/UpdateQusAnsPage/UpdateQusAnsPopup.html",controller:"updateQusAnsPopupCtrl",controllerAs:"updateQusAnsPopupVM",backdrop:"static",resolve:{question:function(){return question}}});modalInstance.result.then(function(){refreshList()},function(){})}}function updateQusAnsPopupCtrl($scope,$modalInstance,question,updateQusAnsSevice){var updateQusAnsPopupVM=this;updateQusAnsPopupVM.question=question,updateQusAnsPopupVM.doSave=function(){return updateQusAnsPopupVM.question.question&&updateQusAnsPopupVM.question.answer&&""!=updateQusAnsPopupVM.question.question&&""!=updateQusAnsPopupVM.question.answer?void updateQusAnsSevice.saveQustionInfo(updateQusAnsPopupVM.question).success(function(successRes){updateQusAnsPopupVM.errorRes=null,$modalInstance.close()}).error(function(errorRes){updateQusAnsPopupVM.errorRes=errorRes}):void(updateQusAnsPopupVM.errorRes="Please give question and answer")},updateQusAnsPopupVM.doCancel=function(){$modalInstance.dismiss("cancel")}}var questionAnswer=angular.module("updateQusAns",["ui.router","updateQusAnsList"]);questionAnswer.config(["$stateProvider",stateConfig]),questionAnswer.controller("updateQusAnsCtrl",["$scope","$rootScope","$state","$stateParams","$timeout","$uibModal","BASE_CONFIG","updateQusAnsSevice","questionList",controller]),questionAnswer.controller("updateQusAnsPopupCtrl",["$scope","$modalInstance","question","updateQusAnsSevice",updateQusAnsPopupCtrl])}(),function(){"use strict";function questionAnswerService($http,BASE_CONFIG){function getListOfQus(qtype){var query={sort:[{_id:{order:"asc"}}]};return $http.post(BASE_CONFIG.API_HOST+qtype.toLowerCase()+"/_search?size=1000",query)}function saveQustionInfo(qustionInfo){var qtype=qustionInfo.qtype,id=qustionInfo.id?qustionInfo.id:"",request={qtype:qustionInfo.qtype,question:qustionInfo.question,answer:qustionInfo.answer};return $http.post(BASE_CONFIG.API_HOST+qtype.toLowerCase()+"/"+id,request)}function deleteQuestion(item){return $http["delete"](BASE_CONFIG.API_HOST+item.qtype.toLowerCase()+"/"+item.id)}function getFetchedQus(){return qList}function setQusList(list){qList=[],angular.forEach(list,function(item,index){var qusInfo=item._source;qusInfo.qno=index+1,qusInfo.id=item._id,qList.push(item._source)})}function getQusInfo(index){var qusInfo=qList[index-1];return qusInfo?{}:qusInfo}function getQusCount(){return qList.length}var qList=[];return{getListOfQus:getListOfQus,setQusList:setQusList,getQusInfo:getQusInfo,getQusCount:getQusCount,getFetchedQus:getFetchedQus,saveQustionInfo:saveQustionInfo,deleteQuestion:deleteQuestion}}angular.module("questionAnswer").service("updateQusAnsSevice",["$http","BASE_CONFIG",questionAnswerService])}();